// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface IAnswerFields {
  /** Title */
  title: string;

  /** Image */
  image?: Asset | undefined;

  /** Description */
  description?: string | undefined;
}

/** This model is used in conjuction with Question model to form a pairing for usage by the mobile application. */

export interface IAnswer extends Entry<IAnswerFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'answer';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBlogFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Title */
  title: string;

  /** Subtitle */
  subtitle?: string | undefined;

  /** Type */
  type?:
    | 'Article'
    | 'Video'
    | 'Infographique'
    | 'Challenge'
    | 'Podcast'
    | 'Promotion'
    | 'Healthy Habits'
    | undefined;

  /** Is Daily Update */
  isDailyUpdate?: boolean | undefined;

  /** Visibility  */
  visibility?: boolean | undefined;

  /** Category */
  category: IBlogCategory[];

  /** Subcategory */
  subcategory?: IBlogSubcategory[] | undefined;

  /** Goal */
  goal?: IAnswer[] | undefined;

  /** User Preferences */
  userPreferences?: IAnswer[] | undefined;

  /** Club Tags */
  clubTags?: IServices[] | undefined;

  /** Text */
  text: Document;

  /** Header Picture */
  headerPicture?: Asset | undefined;

  /** Bottom Picture */
  bottomPicture?: Asset | undefined;

  /** BottomVideo */
  bottomVideo?: string | undefined;

  /** Reading Time */
  readingTime?: string | undefined;
}

/** A blog article which is made of known types i.e. Nutrition, Lifestyle etc. */

export interface IBlog extends Entry<IBlogFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'blog';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBlogCategoryFields {
  /** Name */
  name: string;
}

/** Categories a top level a blog entry */

export interface IBlogCategory extends Entry<IBlogCategoryFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'blogCategory';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBlogSubcategoryFields {
  /** Name */
  name: string;
}

/** Sub Categories which can be assigned to a blog entry */

export interface IBlogSubcategory extends Entry<IBlogSubcategoryFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'blogSubcategory';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBodyPartFields {
  /** Name */
  name: string;
}

/** Lookup values for body parts on various content models. */

export interface IBodyPart extends Entry<IBodyPartFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'bodyPart';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IClubFields {
  /** Club Id */
  clubId: string;

  /** Name */
  name?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Address */
  address?: string | undefined;

  /** City */
  city?: string | undefined;

  /** Postal Code */
  postalCode?: string | undefined;

  /** Country */
  country?: string | undefined;

  /** Closed */
  closed?: boolean | undefined;

  /** mainPhone */
  mainPhone?: string | undefined;

  /** mainEmail */
  mainEmail?: string | undefined;

  /** timezone */
  timezone?: string | undefined;

  /** Location */
  location?: { lat: number; lon: number } | undefined;

  /** Services */
  services?: IServices[] | undefined;

  /** Facilities */
  facilities?: IFacility[] | undefined;

  /** Reopen Date */
  reopenDate?: string | undefined;

  /** hours */
  hours?: Record<string, any> | undefined;

  /** Hours Text */
  hoursText?: string | undefined;

  /** Holiday Hours */
  holidayHours?: Record<string, any> | undefined;

  /** Holiday Hours Text */
  holidayHoursText?: string | undefined;

  /** URL */
  url?: string | undefined;

  /** Special Occasion */
  specialOccasion?: boolean | undefined;

  /** Special Occasion Title */
  specialOccasionTitle?: string | undefined;

  /** Special Occasion Description */
  specialOccasionDescription?: string | undefined;

  /** Personal Trainers */
  personalTrainers?: IPersonalTrainers[] | undefined;
}

/** A model to absorb data from Mulesoft endpoint. Intended to be READONLY. */

export interface IClub extends Entry<IClubFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'club';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IClubZoneFields {
  /** Name */
  name: string;
}

/** Club Zone lookup which is used by other model(s). */

export interface IClubZone extends Entry<IClubZoneFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'clubZone';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IDietFields {
  /** Name */
  name?: string | undefined;
}

/** Lookup for recipes. */

export interface IDiet extends Entry<IDietFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'diet';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IEquipmentFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Webshop URL */
  webshopUrl?: string | undefined;

  /** Picture */
  picture?: Asset | undefined;

  /** BynderId */
  bynderId?: string | undefined;
}

/** Represents a piece of gym equipment and used as a lookup in other content model(s). */

export interface IEquipment extends Entry<IEquipmentFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'equipment';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IExerciseFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Equipment */
  equipment: IEquipment[];

  /** Location */
  location?: ILocation[] | undefined;

  /** Club Zone */
  clubZone?: IClubZone[] | undefined;

  /** Based on */
  basedOn?: ('Repetitions' | 'Duration' | 'Calories' | 'Heart rate')[] | undefined;

  /** Picture */
  picture?: Asset | undefined;

  /** BynderId */
  bynderId: string;

  /** Model */
  model?: string | undefined;

  /** Setup */
  setup?: string | undefined;

  /** Exercise Instruction */
  exerciseInstruction?: string | undefined;

  /** Body parts */
  bodyParts?: IBodyPart[] | undefined;

  /** Primary Muscle Group */
  primaryMuscleGroup?: IMuscleGroup[] | undefined;

  /** Secondary Muscle Group */
  secondaryMuscleGroup?: IMuscleGroup[] | undefined;

  /** Exercise Type */
  exerciseType?: IExerciseType | undefined;

  /** Level */
  level?: IAnswer | undefined;

  /** Primary Joint */
  primaryJoint?: IJoint | undefined;

  /** Primary Motion */
  primaryMotion?:
    | 'Combination'
    | 'Eversion'
    | 'Extension'
    | 'Flexion'
    | 'Inversion'
    | 'Lateroflexion'
    | 'Rotation'
    | 'Pronatie'
    | 'Supinatie'
    | 'Abduction'
    | 'Adduction'
    | 'Endorotation'
    | 'Exorotation'
    | 'Step lateral'
    | 'Step'
    | 'Squat'
    | 'Protraction'
    | 'Retraction'
    | 'Circumduction'
    | 'Depression'
    | 'Elevation'
    | 'Fly forward'
    | 'Fly reverse'
    | 'Raise front'
    | 'Raise lateral'
    | 'Pull back'
    | 'Pull overhead'
    | 'Pull over'
    | 'Pull up'
    | 'Pull under'
    | 'Push forward'
    | 'Push down'
    | 'Push overhead'
    | 'Torsion'
    | undefined;

  /** Secondary Joint */
  secondaryJoint?: IJoint | undefined;

  /** Secondary Motion */
  secondaryMotion?:
    | 'Combination'
    | 'Eversion'
    | 'Extension'
    | 'Flexion'
    | 'Inversion'
    | 'Lateroflexion'
    | 'Rotation'
    | 'Pronatie'
    | 'Supinatie'
    | 'Abduction'
    | 'Adduction'
    | 'Endorotation'
    | 'Exorotation'
    | 'Step lateral'
    | 'Step'
    | 'Squat'
    | 'Protraction'
    | 'Retraction'
    | 'Circumduction'
    | 'Depression'
    | 'Elevation'
    | 'Fly forward'
    | 'Fly reverse'
    | 'Raise front'
    | 'Raise lateral'
    | 'Pull back'
    | 'Pull overhead'
    | 'Pull over'
    | 'Pull up'
    | 'Pull under'
    | 'Push forward'
    | 'Push down'
    | 'Push overhead'
    | 'Torsion'
    | undefined;

  /** MET Value */
  metValue: number;

  /** Duration of 1 rep */
  durationOf1Rep: string;

  /** Progression */
  progression?: IExercise | undefined;

  /** Regression */
  regression?: IExercise | undefined;

  /** Alternative */
  alternative?: IExercise | undefined;

  /** Vixy Video */
  vixyVideo?: string | undefined;
}

/** Encompasses the information for a exercsie. */

export interface IExercise extends Entry<IExerciseFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'exercise';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IExerciseTypeFields {
  /** Name */
  name: string;
}

/** Lookup used by other model(s). */

export interface IExerciseType extends Entry<IExerciseTypeFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'exerciseType';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFacilityFields {
  /** Icon */
  icon?: Asset | undefined;

  /** Name */
  name: string;
}

/** Represents a Club Facilities i.e. Lockers, Dressing Rooms */

export interface IFacility extends Entry<IFacilityFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'facility';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IGroupClassesFields {
  /** Administrative Title */
  administrativeTitle?: string | undefined;

  /** Class ID */
  classId: string;

  /** Image */
  image: Asset;

  /** BynderId */
  bynderId?: string | undefined;
}

/** Model needed for Club lesson information */

export interface IGroupClasses extends Entry<IGroupClassesFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'groupClasses';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IGxrFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Vixy ID */
  vixyId: string;

  /** Instructor */
  instructor?: IInstructor | undefined;

  /** Equipment */
  equipment?: IEquipment[] | undefined;
}

export interface IGxr extends Entry<IGxrFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'gxr';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IImageFields {
  /** Management Title */
  managementTitle: string;

  /** Image */
  image?: Asset | undefined;

  /** Caption */
  caption?: string | undefined;

  /** BynderId */
  bynderId: string;
}

/** Model for images and maintaining reference to Bynder DAM source. With source asset being stored into Asset library of Contentful. */

export interface IImage extends Entry<IImageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'image';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IIngredientFields {
  /** Name */
  name: string;
}

/** A library of ingredient items used within a recipe. */

export interface IIngredient extends Entry<IIngredientFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'ingredient';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IInstructorFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Profile Picture */
  profilePicture?: Asset | undefined;

  /** BynderId */
  bynderId?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Tags */
  tags?: string[] | undefined;
}

export interface IInstructor extends Entry<IInstructorFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'instructor';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IJointFields {
  /** Name */
  name: string;
}

/** A jount lookup for other models. */

export interface IJoint extends Entry<IJointFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'joint';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ILocationFields {
  /** Name */
  name: string;
}

/** Location lookup values used in other content models. */

export interface ILocation extends Entry<ILocationFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'location';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IMealTypeFields {
  /** Name */
  name: string;
}

/** Recipe lookup for Meal Type */

export interface IMealType extends Entry<IMealTypeFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'mealType';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IMemberBenefitLinksFields {
  /** Image */
  image: Asset;

  /** BynderId */
  bynderId?: string | undefined;

  /** Title */
  title?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Link */
  link?: string | undefined;
}

/** Model for Member Benefits which would appear at the bottom of the users profile */

export interface IMemberBenefitLinks extends Entry<IMemberBenefitLinksFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'memberBenefitLinks';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IMuscleGroupFields {
  /** Name */
  name: string;
}

/** Lookup values for exercise model. */

export interface IMuscleGroup extends Entry<IMuscleGroupFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'muscleGroup';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface INavigationElementFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Icon */
  icon?: Asset | undefined;

  /** Label */
  label: string;

  /** Type */
  type: 'Internal' | 'External';

  /** Link Internal */
  linkInternal?: IScreen | undefined;

  /** Link External */
  linkExternal?: string | undefined;

  /** Visible */
  visible: boolean;
}

/** Internal or external navigation items used in Footer and Bottom Navigation */

export interface INavigationElement extends Entry<INavigationElementFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'navigationElement';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IOfferFields {
  /** Heading */
  heading: string;

  /** Location */
  location?: ('Coach' | 'Programs')[] | undefined;

  /** Subscription add-ons */
  subscriptionAddOns?: 'Yanga' | 'OCA' | 'PT intro' | 'Live classes' | undefined;

  /** Image */
  image: Asset;

  /** BynderId */
  bynderId?: string | undefined;

  /** Caption */
  caption: string;

  /** Description */
  description?: string | undefined;

  /** Button Label */
  buttonLabel?: string | undefined;

  /** Link */
  link: string;

  /** SSO Link */
  ssoLink?: boolean | undefined;
}

/** Offers that would display on the `Coach` and `Program` screens */

export interface IOffer extends Entry<IOfferFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'offer';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IPersonalTrainersFields {
  /** SalesforceId */
  salesforceId: string;

  /** Name */
  name: string;

  /** Nickname */
  nickname?: string | undefined;

  /** Type */
  type?: string[] | undefined;

  /** Trainer Type */
  trainerType?: string[] | undefined;

  /** Gender */
  gender?: string | undefined;

  /** Profile Picture */
  profilePicture?: Asset | undefined;

  /** Description */
  description?: string | undefined;

  /** Country */
  country?: string | undefined;

  /** Email */
  email?: string | undefined;

  /** Company Name */
  companyName?: string | undefined;

  /** Spoken Language */
  spokenLanguage?: string[] | undefined;

  /** Language Partners */
  languagePartners?: string | undefined;

  /** Education Level */
  educationLevel?: string | undefined;

  /** Education */
  education?: string[] | undefined;

  /** Specialties */
  specialties?: string[] | undefined;

  /** Start Date */
  startDate?: string | undefined;

  /** End Date */
  endDate?: string | undefined;

  /** Accredited by EREPS */
  accreditedByEreps?: boolean | undefined;

  /** Accredited Level by EREPS */
  accreditedLevelByEreps?: string | undefined;

  /** Professional Card */
  professionalCard?: string | undefined;

  /** Tarif */
  tarif?: string | undefined;

  /** Club Id */
  clubId?: string[] | undefined;
}

/** Model for syncing of Personal trainers to Contentful. */

export interface IPersonalTrainers extends Entry<IPersonalTrainersFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'personalTrainers';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IPlanFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Weekly overview */
  weeklyOverview?: string | undefined;

  /** Duration Period */
  durationPeriod: 'Days' | 'Weeks' | 'Month';

  /** Duration */
  duration: number;

  /** Author */
  author?: string | undefined;

  /** Week 1 */
  week1?: (IBlog | IRecipe | IWorkout)[] | undefined;
}

export interface IPlan extends Entry<IPlanFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'plan';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IProgramFields {
  /** Name */
  name: string;

  /** Description */
  description?: string | undefined;

  /** Duration Period */
  durationPeriod: 'Days' | 'Weeks' | 'Months';

  /** Duration */
  duration: number;

  /** Training per week */
  trainingPerWeek?: number | undefined;

  /** Level */
  level?: IAnswer[] | undefined;

  /** Location */
  location?: ILocation[] | undefined;

  /** Goal */
  goal?: IAnswer[] | undefined;

  /** Vixy Video */
  vixyVideo?: string | undefined;

  /** Picture */
  picture: Asset;

  /** BynderId */
  bynderId?: string | undefined;

  /** Author */
  author?: string | undefined;

  /** User Preferences */
  userPreferences?: IAnswer[] | undefined;

  /** Visible */
  visible?: boolean | undefined;

  /** Week 1 program */
  week1Program?: Record<string, any> | undefined;

  /** Week 1 */
  week1?: IWorkout[] | undefined;

  /** Week 2 program */
  week2Program?: Record<string, any> | undefined;

  /** Week 2 */
  week2?: IWorkout[] | undefined;

  /** Week 3 program */
  week3Program?: Record<string, any> | undefined;

  /** Week 3 */
  week3?: IWorkout[] | undefined;

  /** Week 4 program */
  week4Program?: Record<string, any> | undefined;

  /** Week 4 */
  week4?: IWorkout[] | undefined;

  /** Week 5 program */
  week5Program?: Record<string, any> | undefined;

  /** Week 5 */
  week5?: IWorkout[] | undefined;

  /** Week 6 program */
  week6Program?: Record<string, any> | undefined;

  /** Week 6 */
  week6?: IWorkout[] | undefined;

  /** Week 7 program */
  week7Program?: Record<string, any> | undefined;

  /** Week 7 */
  week7?: IWorkout[] | undefined;

  /** Week 8 program */
  week8Program?: Record<string, any> | undefined;

  /** Week 8 */
  week8?: IWorkout[] | undefined;

  /** Week 9 program */
  week9Program?: Record<string, any> | undefined;

  /** Week 9 */
  week9?: IWorkout[] | undefined;

  /** Week 10 program */
  week10Program?: Record<string, any> | undefined;

  /** Week 10 */
  week10?: IWorkout[] | undefined;

  /** Week 11 program */
  week11Program?: Record<string, any> | undefined;

  /** Week 11 */
  week11?: IWorkout[] | undefined;

  /** Week 12 program */
  week12Program?: Record<string, any> | undefined;

  /** Week 12 */
  week12?: IWorkout[] | undefined;
}

export interface IProgram extends Entry<IProgramFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'program';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IQuestionFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Question */
  question: string;

  /** Explaination */
  explaination?: string | undefined;

  /** Type */
  type: 'Single Select' | 'Multiple Select' | 'Height and Weight';

  /** answerOptions */
  answerOptions?: IAnswer[] | undefined;
}

/** Represents an onboarding question within the mobile application. */

export interface IQuestion extends Entry<IQuestionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'question';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IRecipeFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Source */
  source?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Goal */
  goal: IAnswer[];

  /** Meal Type */
  mealType: IMealType[];

  /** Diet */
  diet: IDiet[];

  /** Difficulty */
  difficulty?: 'Easy' | 'Moderate' | 'Difficult' | undefined;

  /** Prep Time */
  prepTime: string;

  /** Cooking Time */
  cookingTime: string;

  /** KCAL */
  kcal: string;

  /** CARBS */
  carbs: string;

  /** PROTEIN */
  protein: string;

  /** FAT */
  fat: string;

  /** Serves */
  serves: string;

  /** Ingredients */
  ingredients: Record<string, any>;

  /** Instructions */
  instructions: Document;

  /** Tips / Variations */
  tipsVariations?: Document | undefined;

  /** Picture */
  picture: Asset;
}

/** Represents a recipe to prepare a meal. */

export interface IRecipe extends Entry<IRecipeFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'recipe';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IResourceFields {
  /** Key */
  key: string;

  /** Value */
  value: string;

  /** Description */
  description?: string | undefined;
}

/** Provides a key/value translatable to all locale(s) for the application. */

export interface IResource extends Entry<IResourceFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'resource';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IResourceSetFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Description */
  description?: string | undefined;

  /** Resources */
  resources?: IResource[] | undefined;
}

/** A model to group resource strings typically used to control items such as labels, text and messaging string values. */

export interface IResourceSet extends Entry<IResourceSetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'resourceSet';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IScreenFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Resource Set */
  resourceSet?: IResourceSet | undefined;

  /** Questions */
  questions?: IQuestion[] | undefined;

  /** Footer */
  footer?: INavigationElement[] | undefined;

  /** Keywords */
  keywords?: string[] | undefined;

  /** Bottom Buttons */
  bottomButtons?: INavigationElement[] | undefined;
}

/** Represents a screen within the application and is a wrapper for all things to do with a screen. */

export interface IScreen extends Entry<IScreenFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'screen';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IServicesFields {
  /** Name */
  name: string;
}

/** Used to represent services which a Club will offer */

export interface IServices extends Entry<IServicesFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'services';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITypeFields {
  /** Name */
  name: string;
}

/** Lookup values for Type on multiple model(s). */

export interface IType extends Entry<ITypeFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'type';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IUnitFields {
  /** Name */
  name?: string | undefined;
}

/** Unit lookup for Recipes. */

export interface IUnit extends Entry<IUnitFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'unit';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVhGlobalSettingsFields {
  /** VH Banner Title */
  vhBannerTitle?: string | undefined;

  /** VH Banner Description */
  vhBannerDescription?: string | undefined;

  /** VH Header menu */
  vhHeaderMenu?: IVhSection[] | undefined;

  /** VH Footer menu */
  vhFooterMenu?: IVhSection[] | undefined;
}

export interface IVhGlobalSettings extends Entry<IVhGlobalSettingsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'vhGlobalSettings';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVhQrBlocksFields {
  /** VH Administrative Title */
  vhAdministrativeTitle?: string | undefined;

  /** VH Link */
  vhLink?: string | undefined;

  /** VH Title */
  vhTitle?: string | undefined;
}

export interface IVhQrBlocks extends Entry<IVhQrBlocksFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'vhQrBlocks';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVhScreenPageFields {
  /** VH Administrative Title */
  vhAdministrativeTitle?: string | undefined;

  /** VH Teaser Picture */
  vhTeaserPicture?: Asset | undefined;

  /** BynderId */
  bynderId?: string | undefined;

  /** VH Teaser Title */
  vhTeaserTitle?: string | undefined;

  /** VH Teaser Description */
  vhTeaserDescription?: string | undefined;

  /** VH Teaser Label Text */
  vhTeaserLabelText?: string | undefined;

  /** VH Left Col Title */
  vhLeftColTitle?: string | undefined;

  /** VH Left Col Description */
  vhLeftColDescription?: string | undefined;

  /** VH Left Col Blocks */
  vhLeftColBlocks?: IVhQrBlocks[] | undefined;

  /** VH Right Col Title */
  vhRightColTitle?: string | undefined;

  /** VH Right Col Description */
  vhRightColDescription?: string | undefined;

  /** VH Right Col Blocks */
  vhRightColBlocks?: IVhQrBlocks[] | undefined;
}

export interface IVhScreenPage extends Entry<IVhScreenPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'vhScreenPage';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVhSectionFields {
  /** VH Administrative Title */
  vhAdministrativeTitle?: string | undefined;

  /** VH Title */
  vhTitle?: string | undefined;

  /** VH Descriptive Text */
  vhDescriptiveText?: string | undefined;

  /** VH Screens */
  vhScreens?: IVhScreenPage[] | undefined;
}

export interface IVhSection extends Entry<IVhSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'vhSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVirtualhostBlockFields {
  /** Virtualhost Administrative Title */
  virtualhostAdministrativeTitle?: string | undefined;

  /** Virtualhost Title */
  virtualhostTitle?: string | undefined;

  /** Virtualhost Description */
  virtualhostDescription?: string | undefined;

  /** VirtualHost Bynder Image */
  virtualHostBynderImage?: Asset | undefined;

  /** Virtualhost video */
  virtualhostVideo?: Asset | undefined;

  /** BynderId */
  bynderId?: string | undefined;

  /** Virtualhost QR code URL */
  virtualhostQrCodeUrl?: string | undefined;
}

/** A reusable block that can be used for the Virtualhost screens */

export interface IVirtualhostBlock extends Entry<IVirtualhostBlockFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'virtualhostBlock';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IVirtualhostGlobalConfigFields {
  /** Virtualhost Administrative Title */
  virtualhostAdministrativeTitle: string;

  /** Virtualhost Title */
  virtualhostTitle: string;

  /** Virtualhost Description */
  virtualhostDescription?: string | undefined;

  /** Virtualhost Image */
  virtualhostImage?: Asset | undefined;

  /** BynderId */
  bynderId?: string | undefined;
}

/** A configuration model for the Virtualhost Landing pages. */

export interface IVirtualhostGlobalConfig extends Entry<IVirtualhostGlobalConfigFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'virtualhostGlobalConfig';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IWalkthroughFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Type */
  type: 'Initial' | 'Regular' | 'Final';

  /** Title */
  title?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Button Label */
  buttonLabel?: string | undefined;

  /** Dismiss Button Label */
  dismissButtonLabel?: string | undefined;
}

/** Scenes within the walkthrough are created with this content model. */

export interface IWalkthrough extends Entry<IWalkthroughFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'walkthrough';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IWorkoutFields {
  /** Administrative Title */
  administrativeTitle: string;

  /** Name */
  name: string;

  /** Description */
  description?: string | undefined;

  /** Level */
  level: IAnswer[];

  /** Goal */
  goal: IAnswer[];

  /** Location */
  location?: ILocation | undefined;

  /** Equipment */
  equipment?: IEquipment[] | undefined;

  /** Type */
  type?: IType[] | undefined;

  /** User Preferences */
  userPreferences?: IAnswer[] | undefined;

  /** Author */
  author?: string | undefined;

  /** Visible */
  visible: boolean;

  /** Picture */
  picture: Asset;

  /** BynderId */
  bynderId: string;

  /** Warm Up */
  warmUp?: Record<string, any> | undefined;

  /** Power Set 1 */
  powerSet1?: Record<string, any> | undefined;

  /** Power Set 2 */
  powerSet2?: Record<string, any> | undefined;

  /** Power Set 3 */
  powerSet3?: Record<string, any> | undefined;

  /** Power Set 4 */
  powerSet4?: Record<string, any> | undefined;

  /** Power Set 5 */
  powerSet5?: Record<string, any> | undefined;

  /** Power Set 6 */
  powerSet6?: Record<string, any> | undefined;

  /** Power Set 7 */
  powerSet7?: Record<string, any> | undefined;

  /** Power Set 8 */
  powerSet8?: Record<string, any> | undefined;

  /** Power Set 9 */
  powerSet9?: Record<string, any> | undefined;

  /** Power Set 10 */
  powerSet10?: Record<string, any> | undefined;

  /** Cool Down */
  coolDown?: Record<string, any> | undefined;

  /** Duration */
  duration?: string | undefined;

  /** GXR */
  gxr?: boolean | undefined;

  /** Audio workout */
  audioWorkout?: boolean | undefined;

  /** GXR Exercise Ref */
  gxrExerciseRef?: IGxr[] | undefined;

  /** Duration GXR & Audio */
  durationGxrAudio?: string | undefined;

  /** Instructor */
  instructor?: IInstructor | undefined;

  /** Vixy Video */
  vixyVideo?: string | undefined;

  /** Spotify Playlist ID */
  spotifyPlaylistId?: string | undefined;

  /** METs */
  mets?: number | undefined;
}

/** Encompassing data for a Workout Library entry */

export interface IWorkout extends Entry<IWorkoutFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'workout';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export type CONTENT_TYPE =
  | 'answer'
  | 'blog'
  | 'blogCategory'
  | 'blogSubcategory'
  | 'bodyPart'
  | 'club'
  | 'clubZone'
  | 'diet'
  | 'equipment'
  | 'exercise'
  | 'exerciseType'
  | 'facility'
  | 'groupClasses'
  | 'gxr'
  | 'image'
  | 'ingredient'
  | 'instructor'
  | 'joint'
  | 'location'
  | 'mealType'
  | 'memberBenefitLinks'
  | 'muscleGroup'
  | 'navigationElement'
  | 'offer'
  | 'personalTrainers'
  | 'plan'
  | 'program'
  | 'question'
  | 'recipe'
  | 'resource'
  | 'resourceSet'
  | 'screen'
  | 'services'
  | 'type'
  | 'unit'
  | 'vhGlobalSettings'
  | 'vhQrBlocks'
  | 'vhScreenPage'
  | 'vhSection'
  | 'virtualhostBlock'
  | 'virtualhostGlobalConfig'
  | 'walkthrough'
  | 'workout';

export type LOCALE_CODE = 'en-US' | 'es' | 'fr' | 'fr-BE' | 'fr-LU' | 'nl' | 'nl-BE';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US';
